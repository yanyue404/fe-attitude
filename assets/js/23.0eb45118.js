(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{350:function(t,v,_){"use strict";_.r(v);var s=_(27),a=Object(s.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"自检-面试手册"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#自检-面试手册"}},[t._v("#")]),t._v(" 自检（面试手册）")]),t._v(" "),v("p",[v("strong",[t._v("简历")])]),t._v(" "),v("ol",[v("li",[v("p",[t._v("大厂简历筛选有一套机制，有大厂经历或学历好或经验匹配的会比较容易通过筛选，缺少光环的需要有其他东西来证明，比如优秀的项目经历，参与过好的开源项目等")])]),t._v(" "),v("li",[v("p",[t._v("简历上描述的技术/内容/项目确保自己是真的熟悉/掌握，看看每个技能是不是自己真的掌握了，能说出个 1.2.3；每个项目是否自己能说清楚，一些细节是否了解，有哪些复盘点，是否有改进空间")])]),t._v(" "),v("li",[v("p",[t._v("简历上描述的应该是与目标岗位直接/间接相关的，其他的比较优秀的点可以一笔带过，不需要花大篇幅介绍这些与目标岗位不符的能力")])]),t._v(" "),v("li",[v("p",[t._v("面试官简历评估时也会看跳槽频率，像 1 年 1 跳这种会被评为不稳定，这时除非学历/经历特别出色的，其他基本就不通过了")])])]),t._v(" "),v("p",[v("strong",[t._v("面试")])]),t._v(" "),v("ol",[v("li",[v("p",[t._v("面试除了技能/项目知识外，状态也很重要；接到面试电话说明简历评估通过了，时间可以你自己定，如果没准备好，可以把时间拉长些，给自己一些准备时间；要求当场面试的可以礼貌拒绝然后定一个合适的时间")])]),t._v(" "),v("li",[v("p",[t._v("对不同工作年限的同学会有不同的要求，校招主要看潜力，所以基础（计算机、网络）和算法会考得比较多；1~3 年除了潜力外还看经验是否与业务匹配，项目经验；3~5 年看是否有独挡一面的能力，需要在技术上有较好的深度，在做事情方面有自己的一套；大于 5 年的除了深度外对广度也有要求，且需要有跨端和架构设计的能力，对于管理岗位也会看带团队的能力")])]),t._v(" "),v("li",[v("p",[t._v("面试时遇到不会的不用慌，每个人的知识面不一样，碰到不会的很正常，但可以积极思考，首先坦诚表示没有了解过相关知识，然后以现有的知识体系思考下这个问题，说明思路，合理猜测结果")])]),t._v(" "),v("li",[v("p",[t._v("有时会有面试官会刻意施加压力，这时不在于问题回答的是否正确，而在于是否能在这些压力下仍然能够理性思考，面对面试官的每个问题，可以尝试想下面试官问这个问题的背后目的是什么")])])]),t._v(" "),v("h2",{attrs:{id:"面试要点解析"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#面试要点解析"}},[t._v("#")]),t._v(" 面试要点解析")]),t._v(" "),v("h3",{attrs:{id:"前端基础"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#前端基础"}},[t._v("#")]),t._v(" 前端基础")]),t._v(" "),v("p",[v("strong",[t._v("javascript")])]),t._v(" "),v("ul",[v("li",[t._v("原型链")]),t._v(" "),v("li",[t._v("继承")]),t._v(" "),v("li",[t._v("作用域")]),t._v(" "),v("li",[t._v("闭包")]),t._v(" "),v("li",[t._v("变量提升")]),t._v(" "),v("li",[t._v("this 的指向")]),t._v(" "),v("li",[t._v("立即执行函数")]),t._v(" "),v("li",[t._v("instanceof 原理")]),t._v(" "),v("li",[t._v("bind 的实现")]),t._v(" "),v("li",[t._v("apply 和 call")]),t._v(" "),v("li",[t._v("柯里化")]),t._v(" "),v("li",[t._v("v8 垃圾回收机制")]),t._v(" "),v("li",[t._v("浮点数精度")]),t._v(" "),v("li",[t._v("new 操作符")]),t._v(" "),v("li",[t._v("事件循环机制")]),t._v(" "),v("li",[t._v("promise 原理")]),t._v(" "),v("li",[t._v("generator 原理")])]),t._v(" "),v("p",[v("strong",[t._v("css")])]),t._v(" "),v("ul",[v("li",[t._v("盒子模型")]),t._v(" "),v("li",[t._v("CSS 选择器")]),t._v(" "),v("li",[t._v("BFC")]),t._v(" "),v("li",[t._v("position")]),t._v(" "),v("li",[t._v("flex 布局")]),t._v(" "),v("li",[t._v("css 优先级")]),t._v(" "),v("li",[t._v("双飞冀/圣杯布局")]),t._v(" "),v("li",[t._v("CSS3 新特性")]),t._v(" "),v("li",[t._v("CSS 样式隔离")]),t._v(" "),v("li",[t._v("CSS 性能优化")]),t._v(" "),v("li",[t._v("层叠上下文")]),t._v(" "),v("li",[t._v("div 居中")]),t._v(" "),v("li",[t._v("浮动")])]),t._v(" "),v("p",[v("strong",[t._v("html&浏览器")])]),t._v(" "),v("ul",[v("li",[t._v("行内元素、块级元素")]),t._v(" "),v("li",[t._v("跨标签页通信")]),t._v(" "),v("li",[t._v("history 和 hash 两种路由")]),t._v(" "),v("li",[t._v("DOM 树")]),t._v(" "),v("li",[t._v("事件模型")]),t._v(" "),v("li",[t._v("缓存策略")]),t._v(" "),v("li",[t._v("浏览器架构")]),t._v(" "),v("li",[t._v("浏览器工作原理")]),t._v(" "),v("li",[t._v("内存泄露")])]),t._v(" "),v("p",[v("strong",[t._v("性能")])]),t._v(" "),v("ul",[v("li",[t._v("前端性能优化指标 RAIL")]),t._v(" "),v("li",[t._v("前端性能优化手段")]),t._v(" "),v("li",[t._v("重排和重绘")]),t._v(" "),v("li",[t._v("白屏")]),t._v(" "),v("li",[t._v("大量图片加载优化")]),t._v(" "),v("li",[t._v("描述下浏览器从输入网址到页面展现的整个过程")]),t._v(" "),v("li",[t._v("动画性能")]),t._v(" "),v("li",[t._v("渲染合成层")])]),t._v(" "),v("p",[v("strong",[t._v("工程化")])]),t._v(" "),v("ul",[v("li",[t._v("模块化机制")]),t._v(" "),v("li",[t._v("tree shaking")]),t._v(" "),v("li",[t._v("uglify 原理")]),t._v(" "),v("li",[t._v("babel 原理")]),t._v(" "),v("li",[t._v("webpack 工作流程")]),t._v(" "),v("li",[t._v("webpack 插件机制")]),t._v(" "),v("li",[t._v("webpack loader 机制")]),t._v(" "),v("li",[t._v("前端微服务")])]),t._v(" "),v("h3",{attrs:{id:"框架"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#框架"}},[t._v("#")]),t._v(" 框架")]),t._v(" "),v("p",[v("strong",[t._v("React")])]),t._v(" "),v("ul",[v("li",[t._v("合成事件")]),t._v(" "),v("li",[t._v("virtual dom")]),t._v(" "),v("li",[t._v("setState 过程")]),t._v(" "),v("li",[t._v("fiber")]),t._v(" "),v("li",[t._v("高阶组件")]),t._v(" "),v("li",[t._v("错误处理")]),t._v(" "),v("li",[t._v("性能优化")])]),t._v(" "),v("p",[v("strong",[t._v("Redux")])]),t._v(" "),v("ul",[v("li",[t._v("redux 核心原则")]),t._v(" "),v("li",[t._v("redux 核心逻辑")])]),t._v(" "),v("p",[v("strong",[t._v("Vue")])]),t._v(" "),v("ul",[v("li",[t._v("数据绑定原理")]),t._v(" "),v("li",[t._v("computed 和 watch")]),t._v(" "),v("li",[t._v("slot")]),t._v(" "),v("li",[t._v("next tick 原理")]),t._v(" "),v("li",[t._v("keep alive")])]),t._v(" "),v("h3",{attrs:{id:"算法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#算法"}},[t._v("#")]),t._v(" 算法")]),t._v(" "),v("p",[v("strong",[t._v("算法")])]),t._v(" "),v("ul",[v("li",[t._v("动态规划：斐波那契数列 ok")]),t._v(" "),v("li",[t._v("数组：合并二维有序数组成一维有序数组 ok")]),t._v(" "),v("li",[t._v("链表：反转链表")]),t._v(" "),v("li",[t._v("链表：链表有环")]),t._v(" "),v("li",[t._v("堆栈队列：判断括号字符串是否有效 ok")]),t._v(" "),v("li",[t._v("返回数组中第 k 个最大元素 ing")]),t._v(" "),v("li",[t._v("找出数组中和为 sum 的 n 个数 ing")]),t._v(" "),v("li",[t._v("贪心：具有给定数值的最小字符串 ok")]),t._v(" "),v("li",[t._v("二叉树：最大深度")]),t._v(" "),v("li",[t._v("二叉树：层次遍历")]),t._v(" "),v("li",[t._v("剪枝：判断数独是否有效")]),t._v(" "),v("li",[t._v("二分查找：求解平方根")]),t._v(" "),v("li",[t._v("字典树：实现一个字典树")]),t._v(" "),v("li",[t._v("动态规划：爬楼梯问题 ok")]),t._v(" "),v("li",[t._v("动态规划：最短距离")]),t._v(" "),v("li",[t._v("数据结构：LRU 缓存")]),t._v(" "),v("li",[t._v("翻转二叉树")])]),t._v(" "),v("p",[v("strong",[t._v("编程题")])]),t._v(" "),v("ul",[v("li",[t._v("实现一个 trim 方法")]),t._v(" "),v("li",[t._v("实现一个 deepClone 方法")]),t._v(" "),v("li",[t._v("实现 add(1)(2)(3)")]),t._v(" "),v("li",[t._v("大数相加")]),t._v(" "),v("li",[t._v("拍平数组")]),t._v(" "),v("li",[t._v("实现防抖函数")]),t._v(" "),v("li",[t._v("实现节流函数")]),t._v(" "),v("li",[t._v("实现字符串翻转")]),t._v(" "),v("li",[t._v("数组去重")]),t._v(" "),v("li",[t._v("实现千位分隔符")]),t._v(" "),v("li",[t._v("判断是否是回文数")]),t._v(" "),v("li",[t._v("实现一个模板引擎")]),t._v(" "),v("li",[t._v("判断一个数是否是素数")]),t._v(" "),v("li",[t._v("获取 n 以内所有的素数")])]),t._v(" "),v("h3",{attrs:{id:"基础"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#基础"}},[t._v("#")]),t._v(" 基础")]),t._v(" "),v("p",[v("strong",[t._v("操作系统")])]),t._v(" "),v("ul",[v("li",[t._v("进程和线程")]),t._v(" "),v("li",[t._v("进程通信")]),t._v(" "),v("li",[t._v("进程调度策略")]),t._v(" "),v("li",[t._v("死锁")]),t._v(" "),v("li",[t._v("IO 多路复用")])]),t._v(" "),v("p",[v("strong",[t._v("网络")])]),t._v(" "),v("ul",[v("li",[t._v("七层网络模型")]),t._v(" "),v("li",[t._v("http")]),t._v(" "),v("li",[t._v("https")]),t._v(" "),v("li",[t._v("http2.0")]),t._v(" "),v("li",[t._v("http3.0")]),t._v(" "),v("li",[t._v("websocket")]),t._v(" "),v("li",[t._v("tcp")]),t._v(" "),v("li",[t._v("udp")])]),t._v(" "),v("h3",{attrs:{id:"大前端"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#大前端"}},[t._v("#")]),t._v(" 大前端")]),t._v(" "),v("p",[v("strong",[t._v("Node")])]),t._v(" "),v("ul",[v("li",[t._v("模块机制")]),t._v(" "),v("li",[t._v("require 原理")]),t._v(" "),v("li",[t._v("事件循环")]),t._v(" "),v("li",[t._v("cluster 原理")]),t._v(" "),v("li",[t._v("流机制")]),t._v(" "),v("li",[t._v("pipe 原理")]),t._v(" "),v("li",[t._v("守护进程")]),t._v(" "),v("li",[t._v("进程通信")]),t._v(" "),v("li",[t._v("异常处理")])]),t._v(" "),v("h3",{attrs:{id:"其他"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),v("p",[v("strong",[t._v("设计架构")])]),t._v(" "),v("ul",[v("li",[t._v("常用设计模式")]),t._v(" "),v("li",[t._v("重构")]),t._v(" "),v("li",[t._v("MVVM")]),t._v(" "),v("li",[t._v("MVC")]),t._v(" "),v("li",[t._v("MVP")])]),t._v(" "),v("p",[v("strong",[t._v("开放问题")])]),t._v(" "),v("ul",[v("li",[t._v("最近看的书")]),t._v(" "),v("li",[t._v("平常的学习途径")]),t._v(" "),v("li",[t._v("你比较擅长哪一块，不足的地方在哪里")])]),t._v(" "),v("h2",{attrs:{id:"模拟题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#模拟题"}},[t._v("#")]),t._v(" 模拟题")]),t._v(" "),v("p",[v("strong",[t._v("（一）")])]),t._v(" "),v("ul",[v("li",[t._v("react setState 是同步还是异步")]),t._v(" "),v("li",[t._v("什么是高阶组件，请举例说明")]),t._v(" "),v("li",[t._v("解释一下原型链")]),t._v(" "),v("li",[t._v("instanceof 原理")]),t._v(" "),v("li",[t._v("apply 和 call 的作用及区别")]),t._v(" "),v("li",[t._v("position 有哪些值，作用分别是什么")]),t._v(" "),v("li",[t._v("说下你对 DOM 树的理解")]),t._v(" "),v("li",[t._v("重排和重绘是什么，有什么区别")]),t._v(" "),v("li",[t._v("https 加密过程是怎样的")]),t._v(" "),v("li",[t._v("实现 add(1)(2)(3)")])]),t._v(" "),v("p",[v("strong",[t._v("（二）")])]),t._v(" "),v("ul",[v("li",[t._v("react 为什么需要合成事件")]),t._v(" "),v("li",[t._v("为什么有时 react 两次 setState，只执行一次")]),t._v(" "),v("li",[t._v("redux 有哪些原则")]),t._v(" "),v("li",[t._v("es5 实现继承")]),t._v(" "),v("li",[t._v("实现一个 promise")]),t._v(" "),v("li",[t._v("CSS 选择器有哪些")]),t._v(" "),v("li",[t._v("说下事件模型")]),t._v(" "),v("li",[t._v("如何减少白屏的时间")]),t._v(" "),v("li",[t._v("3 次握手过程")]),t._v(" "),v("li",[t._v("判断链表是否有环")])]),t._v(" "),v("p",[v("strong",[t._v("（三）")])]),t._v(" "),v("ul",[v("li",[t._v("react 合成事件是什么，和原生事件的区别")]),t._v(" "),v("li",[t._v("react 如何处理异常")]),t._v(" "),v("li",[t._v("闭包的作用和原理")]),t._v(" "),v("li",[t._v("0.1+0.2 为什么不等于 0.3")]),t._v(" "),v("li",[t._v("什么是 BFC，BFC 有什么作用，如何形成 BFC")]),t._v(" "),v("li",[t._v("浏览器缓存策略是怎样的")]),t._v(" "),v("li",[t._v("你知道的前端性能优化手段有哪些")]),t._v(" "),v("li",[t._v("前端模块化机制有哪些")]),t._v(" "),v("li",[t._v("http2.0 做了哪些改进")]),t._v(" "),v("li",[t._v("求解平方根")])]),t._v(" "),v("p",[v("strong",[t._v("（四）")])]),t._v(" "),v("ul",[v("li",[t._v("react 为什么需要 fiber")]),t._v(" "),v("li",[t._v("redux 中间件机制")]),t._v(" "),v("li",[t._v("bind 的实现")]),t._v(" "),v("li",[t._v("说下 generator 原理")]),t._v(" "),v("li",[t._v("flex 布局有什么好处")]),t._v(" "),v("li",[t._v("如何定位内存泄露")]),t._v(" "),v("li",[t._v("渲染合成层是什么")]),t._v(" "),v("li",[t._v("babel 是什么，怎么做到的")]),t._v(" "),v("li",[t._v("http2.0 有哪些不足，http3.0 是什么")]),t._v(" "),v("li",[t._v("实现一个发布订阅模式")])]),t._v(" "),v("p",[v("strong",[t._v("（五）")])]),t._v(" "),v("ul",[v("li",[t._v("vue 的数据绑定机制是如何实现的")]),t._v(" "),v("li",[t._v("vue next tick 实现原理")]),t._v(" "),v("li",[t._v("谈谈变量提升")]),t._v(" "),v("li",[t._v("new 操作符具体做了什么")]),t._v(" "),v("li",[t._v("介绍下盒子模型")]),t._v(" "),v("li",[t._v("有哪些方式可以使 div 居中")]),t._v(" "),v("li",[t._v("有听过前端性能优化指标 RAIL 吗")]),t._v(" "),v("li",[t._v("进程和线程的区别")]),t._v(" "),v("li",[t._v("tcp 滑动窗口是什么")]),t._v(" "),v("li",[t._v("实现一个斐波那契数列")])]),t._v(" "),v("p",[v("strong",[t._v("（六）")])]),t._v(" "),v("ul",[v("li",[t._v("vue 的 computed 和 watch 的区别")]),t._v(" "),v("li",[t._v("说下 vue 的 keep alive")]),t._v(" "),v("li",[t._v("什么是立即执行函数")]),t._v(" "),v("li",[t._v("谈下事件循环机制")]),t._v(" "),v("li",[t._v("css 优先级是怎么计算的")]),t._v(" "),v("li",[t._v("CSS 相关的性能优化")]),t._v(" "),v("li",[t._v("谈下 webpack loader 机制")]),t._v(" "),v("li",[t._v("进程通信方式有哪些")]),t._v(" "),v("li",[t._v("爬楼梯问题")]),t._v(" "),v("li",[t._v("实现一个 trim 方法")])]),t._v(" "),v("p",[v("strong",[t._v("（七）")])]),t._v(" "),v("ul",[v("li",[t._v("react fiber 有哪些优点，怎样做到的")]),t._v(" "),v("li",[t._v("谈谈你对作用域的理解")]),t._v(" "),v("li",[t._v("双飞冀/圣杯布局")]),t._v(" "),v("li",[t._v("浮动元素会造成什么影响，如何清除浮动")]),t._v(" "),v("li",[t._v("网站首页有大量的图片，加载很慢，如何去优化呢？")]),t._v(" "),v("li",[t._v("描述下浏览器从输入网址到页面展现的整个过程")]),t._v(" "),v("li",[t._v("uglify 原理的是什么")]),t._v(" "),v("li",[t._v("tcp 重试机制")]),t._v(" "),v("li",[t._v("层次遍历二叉树")]),t._v(" "),v("li",[t._v("实现节流函数")])]),t._v(" "),v("p",[v("strong",[t._v("（八）")])]),t._v(" "),v("ul",[v("li",[t._v("react 有哪些性能优化的点")]),t._v(" "),v("li",[t._v("v8 垃圾回收机制")]),t._v(" "),v("li",[t._v("CSS 样式隔离手段")]),t._v(" "),v("li",[t._v("行内元素、块级元素有哪些，区别是什么")]),t._v(" "),v("li",[t._v("聊下你知道的浏览器架构")]),t._v(" "),v("li",[t._v("是否有写过 webpack 插件")]),t._v(" "),v("li",[t._v("websocket 建立过程")]),t._v(" "),v("li",[t._v("合并二维有序数组成一维有序数组")]),t._v(" "),v("li",[t._v("实现防抖函数")]),t._v(" "),v("li",[t._v("最近看了什么书，有什么心得")])]),t._v(" "),v("p",[v("strong",[t._v("（九）")])]),t._v(" "),v("ul",[v("li",[t._v("CSS3 有哪些新特性")]),t._v(" "),v("li",[t._v("层叠上下文是什么")]),t._v(" "),v("li",[t._v("history 和 hash 两种路由方式的最大区别是什么？")]),t._v(" "),v("li",[t._v("动画性能如何优化")]),t._v(" "),v("li",[t._v("tree shaking 是什么，有什么作用，原理是什么")]),t._v(" "),v("li",[t._v("webpack 工作流程是怎样的")]),t._v(" "),v("li",[t._v("什么场景下会用策略模式")]),t._v(" "),v("li",[t._v("找出数组中和为 sum 的 n 个数")]),t._v(" "),v("li",[t._v("判断括号字符串是否有效")]),t._v(" "),v("li",[t._v("平常的学习途径")])]),t._v(" "),v("p",[v("strong",[t._v("（十）")])]),t._v(" "),v("ul",[v("li",[t._v("node 模块机制是怎样的")]),t._v(" "),v("li",[t._v("node require 具体实现是什么")]),t._v(" "),v("li",[t._v("node 事件循环与浏览器的哪些不一样")]),t._v(" "),v("li",[t._v("cluster 原理是怎样的")]),t._v(" "),v("li",[t._v("pipe 原理是怎样的")]),t._v(" "),v("li",[t._v("node 的异常处理方式")]),t._v(" "),v("li",[t._v("适配器和外观模式的区别")]),t._v(" "),v("li",[t._v("重构的手段有哪些")]),t._v(" "),v("li",[t._v("数组去重")]),t._v(" "),v("li",[t._v("你比较擅长哪一块，不足的地方在哪里")])]),t._v(" "),v("h2",{attrs:{id:"回答"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#回答"}},[t._v("#")]),t._v(" 回答")]),t._v(" "),v("h3",{attrs:{id:"node"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#node"}},[t._v("#")]),t._v(" Node")]),t._v(" "),v("h4",{attrs:{id:"_1-模块机制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-模块机制"}},[t._v("#")]),t._v(" "),v("strong",[t._v("1. 模块机制")])]),t._v(" "),v("p",[v("strong",[t._v("核心要点")]),t._v("：")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("CommonJS 规范")]),t._v("：每个文件是一个模块，通过 "),v("code",[t._v("require")]),t._v(" 导入，"),v("code",[t._v("module.exports/exports")]),t._v(" 导出")]),t._v(" "),v("li",[v("strong",[t._v("模块类型")]),t._v("：\n"),v("ul",[v("li",[t._v("核心模块（内置模块，如 "),v("code",[t._v("fs")]),t._v(", "),v("code",[t._v("http")]),t._v("）")]),t._v(" "),v("li",[t._v("文件模块（用户自定义模块）")]),t._v(" "),v("li",[t._v("第三方模块（"),v("code",[t._v("node_modules")]),t._v("）")])])]),t._v(" "),v("li",[v("strong",[t._v("加载过程")]),t._v("：\n"),v("ol",[v("li",[t._v("路径解析（优先缓存 → 核心模块 → 路径查找）")]),t._v(" "),v("li",[t._v("文件定位（自动补全 "),v("code",[t._v(".js")]),t._v(", "),v("code",[t._v(".json")]),t._v(", "),v("code",[t._v(".node")]),t._v(" 扩展名）")]),t._v(" "),v("li",[t._v("编译执行（不同扩展名使用不同编译器）")]),t._v(" "),v("li",[t._v("加入缓存（"),v("code",[t._v("require.cache")]),t._v("）")])])])]),t._v(" "),v("p",[v("strong",[t._v("示例")]),t._v("：")]),t._v(" "),v("div",{staticClass:"language-javascript extra-class"},[v("pre",{pre:!0,attrs:{class:"language-javascript"}},[v("code",[v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 查找顺序示例")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http'")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" → 核心模块\n"),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./mod'")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" → 当前目录的 mod"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js\n"),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v("'lodash'")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" → node_modules"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("lodash\n")])])]),v("hr"),t._v(" "),v("h4",{attrs:{id:"_2-require-原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-require-原理"}},[t._v("#")]),t._v(" "),v("strong",[t._v("2. "),v("code",[t._v("require")]),t._v(" 原理")])]),t._v(" "),v("p",[v("strong",[t._v("执行流程")]),t._v("：")]),t._v(" "),v("ol",[v("li",[t._v("解析路径为绝对路径")]),t._v(" "),v("li",[t._v("检查 "),v("code",[t._v("require.cache")]),t._v(" 是否存在缓存")]),t._v(" "),v("li",[t._v("创建 "),v("code",[t._v("Module")]),t._v(" 实例（包含 "),v("code",[t._v("exports")]),t._v(", "),v("code",[t._v("id")]),t._v(", "),v("code",[t._v("loaded")]),t._v(" 等属性）")]),t._v(" "),v("li",[t._v("根据文件类型加载：\n"),v("ul",[v("li",[v("code",[t._v(".js")]),t._v("：包裹成函数 "),v("code",[t._v("(function(exports, require, module, __filename, __dirname) { ... })")])]),t._v(" "),v("li",[v("code",[t._v(".json")]),t._v("：直接解析为 "),v("code",[t._v("JSON.parse")])])])]),t._v(" "),v("li",[t._v("执行模块代码，填充 "),v("code",[t._v("exports")]),t._v(" 对象")]),t._v(" "),v("li",[t._v("返回 "),v("code",[t._v("module.exports")])])]),t._v(" "),v("p",[v("strong",[t._v("关键特性")]),t._v("：")]),t._v(" "),v("ul",[v("li",[t._v("同步加载")]),t._v(" "),v("li",[t._v("缓存机制（相同模块只加载一次）")]),t._v(" "),v("li",[t._v("循环依赖处理（未完成的 "),v("code",[t._v("exports")]),t._v(" 会被提前暴露）")])]),t._v(" "),v("hr"),t._v(" "),v("h4",{attrs:{id:"_3-事件循环"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-事件循环"}},[t._v("#")]),t._v(" "),v("strong",[t._v("3. 事件循环")])]),t._v(" "),v("p",[v("strong",[t._v("六个阶段（libuv 实现）")]),t._v("：")]),t._v(" "),v("ol",[v("li",[v("strong",[t._v("Timers")]),t._v("：执行 "),v("code",[t._v("setTimeout")]),t._v("/"),v("code",[t._v("setInterval")]),t._v(" 回调")]),t._v(" "),v("li",[v("strong",[t._v("Pending callbacks")]),t._v("：执行系统操作回调（如 TCP 错误）")]),t._v(" "),v("li",[v("strong",[t._v("Idle/Prepare")]),t._v("：内部使用")]),t._v(" "),v("li",[v("strong",[t._v("Poll")]),t._v("：\n"),v("ul",[v("li",[t._v("检索新的 I/O 事件")]),t._v(" "),v("li",[t._v("执行 I/O 相关回调")]),t._v(" "),v("li",[t._v("阻塞在此阶段等待新事件（当没有 check 阶段的回调时）")])])]),t._v(" "),v("li",[v("strong",[t._v("Check")]),t._v("：执行 "),v("code",[t._v("setImmediate")]),t._v(" 回调")]),t._v(" "),v("li",[v("strong",[t._v("Close callbacks")]),t._v("：执行关闭事件回调（如 "),v("code",[t._v("socket.on('close')")]),t._v("）")])]),t._v(" "),v("p",[v("strong",[t._v("关键要点")]),t._v("：")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("process.nextTick")]),t._v(" 在阶段切换前执行（微任务）")]),t._v(" "),v("li",[v("code",[t._v("setImmediate")]),t._v(" 在 Check 阶段执行")]),t._v(" "),v("li",[t._v("I/O 回调在 Poll 阶段执行")])]),t._v(" "),v("hr"),t._v(" "),v("h4",{attrs:{id:"_4-cluster-原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-cluster-原理"}},[t._v("#")]),t._v(" "),v("strong",[t._v("4. Cluster 原理")])]),t._v(" "),v("p",[v("strong",[t._v("核心机制")]),t._v("：")]),t._v(" "),v("ul",[v("li",[t._v("Master 进程通过 "),v("code",[t._v("cluster.fork()")]),t._v(" 创建 Worker 进程")]),t._v(" "),v("li",[t._v("共享服务器端口（底层使用 "),v("code",[t._v("round-robin")]),t._v(" 负载均衡）")]),t._v(" "),v("li",[t._v("IPC 通信通道（通过 "),v("code",[t._v("process.send")]),t._v(" 和 "),v("code",[t._v("message")]),t._v(" 事件）")])]),t._v(" "),v("p",[v("strong",[t._v("代码示例")]),t._v("：")]),t._v(" "),v("div",{staticClass:"language-javascript extra-class"},[v("pre",{pre:!0,attrs:{class:"language-javascript"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" cluster "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cluster'")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cluster"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isMaster"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Fork workers")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" numCPUs"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    cluster"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("fork")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Worker 代码")]),t._v("\n  http"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("createServer")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),v("p",[v("strong",[t._v("优化策略")]),t._v("：")]),t._v(" "),v("ul",[v("li",[t._v("心跳检测（防止 Worker 僵死）")]),t._v(" "),v("li",[t._v("优雅重启（"),v("code",[t._v("disconnect")]),t._v(" + "),v("code",[t._v("exit")]),t._v(" 事件配合）")])]),t._v(" "),v("hr"),t._v(" "),v("h4",{attrs:{id:"_5-流机制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-流机制"}},[t._v("#")]),t._v(" "),v("strong",[t._v("5. 流机制")])]),t._v(" "),v("p",[v("strong",[t._v("四种流类型")]),t._v("：")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("类型")]),t._v(" "),v("th",[t._v("特性")]),t._v(" "),v("th",[t._v("示例")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("Readable")]),t._v(" "),v("td",[t._v("数据生产")]),t._v(" "),v("td",[t._v("文件读取流")])]),t._v(" "),v("tr",[v("td",[t._v("Writable")]),t._v(" "),v("td",[t._v("数据消费")]),t._v(" "),v("td",[t._v("HTTP 响应")])]),t._v(" "),v("tr",[v("td",[t._v("Duplex")]),t._v(" "),v("td",[t._v("双向流")]),t._v(" "),v("td",[t._v("TCP socket")])]),t._v(" "),v("tr",[v("td",[t._v("Transform")]),t._v(" "),v("td",[t._v("数据转换")]),t._v(" "),v("td",[t._v("Gzip 压缩")])])])]),t._v(" "),v("p",[v("strong",[t._v("关键概念")]),t._v("：")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("背压（Backpressure）")]),t._v("：通过 "),v("code",[t._v("highWaterMark")]),t._v(" 控制缓冲区大小")]),t._v(" "),v("li",[v("strong",[t._v("流动模式")]),t._v("："),v("code",[t._v("data")]),t._v(" 事件驱动")]),t._v(" "),v("li",[v("strong",[t._v("暂停模式")]),t._v("："),v("code",[t._v("read()")]),t._v(" 方法手动控制")])]),t._v(" "),v("hr"),t._v(" "),v("h4",{attrs:{id:"_6-pipe-原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_6-pipe-原理"}},[t._v("#")]),t._v(" "),v("strong",[t._v("6. "),v("code",[t._v("pipe")]),t._v(" 原理")])]),t._v(" "),v("p",[v("strong",[t._v("核心实现")]),t._v("：")]),t._v(" "),v("div",{staticClass:"language-javascript extra-class"},[v("pre",{pre:!0,attrs:{class:"language-javascript"}},[v("code",[t._v("readable"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipe")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("writable"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  readable"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data'")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("chunk")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("writable"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("chunk"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      readable"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("pause")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  writable"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v("'drain'")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    readable"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("resume")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),v("p",[v("strong",[t._v("特性")]),t._v("：")]),t._v(" "),v("ul",[v("li",[t._v("自动处理背压")]),t._v(" "),v("li",[t._v("错误传播（需手动处理）")]),t._v(" "),v("li",[t._v("可链式调用（"),v("code",[t._v("a.pipe(b).pipe(c)")]),t._v("）")])]),t._v(" "),v("hr"),t._v(" "),v("h4",{attrs:{id:"_7-守护进程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_7-守护进程"}},[t._v("#")]),t._v(" "),v("strong",[t._v("7. 守护进程")])]),t._v(" "),v("p",[v("strong",[t._v("创建步骤")]),t._v("：")]),t._v(" "),v("ol",[v("li",[t._v("创建子进程")]),t._v(" "),v("li",[t._v("脱离控制终端（"),v("code",[t._v("setsid")]),t._v("）")]),t._v(" "),v("li",[t._v("改变工作目录")]),t._v(" "),v("li",[t._v("重定向标准 I/O")]),t._v(" "),v("li",[t._v("错误处理与日志记录")])]),t._v(" "),v("p",[v("strong",[t._v("代码示例")]),t._v("：")]),t._v(" "),v("div",{staticClass:"language-javascript extra-class"},[v("pre",{pre:!0,attrs:{class:"language-javascript"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" spawn "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v("'child_process'")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("spawn\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" daemon "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("spawn")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("argv"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v("'app.js'")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("detached")]),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("stdio")]),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ignore'")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndaemon"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("unref")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),v("hr"),t._v(" "),v("h4",{attrs:{id:"_8-进程通信"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_8-进程通信"}},[t._v("#")]),t._v(" "),v("strong",[t._v("8. 进程通信")])]),t._v(" "),v("p",[v("strong",[t._v("通信方式")]),t._v("：")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("方式")]),t._v(" "),v("th",[t._v("适用场景")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("管道（pipe）")]),t._v(" "),v("td",[t._v("父子进程间简单通信")])]),t._v(" "),v("tr",[v("td",[t._v("消息队列")]),t._v(" "),v("td",[t._v("跨机器通信")])]),t._v(" "),v("tr",[v("td",[t._v("共享内存")]),t._v(" "),v("td",[t._v("大数据量传输")])]),t._v(" "),v("tr",[v("td",[t._v("Socket")]),t._v(" "),v("td",[t._v("网络通信")])]),t._v(" "),v("tr",[v("td",[t._v("Signal")]),t._v(" "),v("td",[t._v("进程控制")])])])]),t._v(" "),v("p",[v("strong",[t._v("Node.js 实现")]),t._v("：")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("child_process")]),t._v(" 使用 IPC 通道")]),t._v(" "),v("li",[v("code",[t._v("worker.send()")]),t._v(" 和 "),v("code",[t._v("process.on('message')")])]),t._v(" "),v("li",[t._v("底层基于 libuv 的跨平台实现（Unix domain socket / Windows named pipe）")])]),t._v(" "),v("hr"),t._v(" "),v("h4",{attrs:{id:"_9-异常处理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_9-异常处理"}},[t._v("#")]),t._v(" "),v("strong",[t._v("9. 异常处理")])]),t._v(" "),v("p",[v("strong",[t._v("分层处理策略")]),t._v("：")]),t._v(" "),v("ol",[v("li",[v("strong",[t._v("Try/Catch")]),t._v("：同步代码")]),t._v(" "),v("li",[v("strong",[t._v("Promise.catch")]),t._v("：异步代码")]),t._v(" "),v("li",[v("strong",[t._v("EventEmitter 错误事件")]),t._v("："),v("div",{staticClass:"language-javascript extra-class"},[v("pre",{pre:!0,attrs:{class:"language-javascript"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" stream "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("createReadStream")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v("'file'")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nstream"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 处理错误 */")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),v("li",[v("strong",[t._v("进程级捕获")]),t._v("："),v("div",{staticClass:"language-javascript extra-class"},[v("pre",{pre:!0,attrs:{class:"language-javascript"}},[v("code",[t._v("process"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v("'uncaughtException'")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  logger"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  process"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("exit")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),v("p",[v("strong",[t._v("最佳实践")]),t._v("：")]),t._v(" "),v("ul",[v("li",[t._v("避免阻塞在 "),v("code",[t._v("uncaughtException")])]),t._v(" "),v("li",[t._v("使用 domain 模块（已废弃，仅旧项目使用）")]),t._v(" "),v("li",[t._v("结合 PM2 等进程管理器实现自动重启")])]),t._v(" "),v("hr"),t._v(" "),v("h3",{attrs:{id:"总结回答示例"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总结回答示例"}},[t._v("#")]),t._v(" "),v("strong",[t._v("总结回答示例")])]),t._v(" "),v("p",[t._v('"Node.js 的模块机制基于 CommonJS 规范，通过 '),v("code",[t._v("require")]),t._v(" 实现依赖加载，其核心原理包括路径解析、缓存和函数包裹。事件循环分为六个阶段，理解 timers、poll 和 check 阶段的执行顺序至关重要。Cluster 模块通过主进程管理多个 Worker 实现了多核利用，底层使用 IPC 通信。流机制通过背压控制优化了大数据处理性能，"),v("code",[t._v("pipe")]),t._v(' 方法则封装了流对接的细节。守护进程需要处理进程分离和日志管理，异常处理要分层级覆盖同步/异步场景。这些机制共同支撑了 Node.js 的高性能服务能力。"')]),t._v(" "),v("h3",{attrs:{id:"参考"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"https://m26bxrpatp.feishu.cn/base/appcn5mUun8tTLsaFG0jrTeUnBg?table=tbllAUETZhGVTWMA&view=vewJHSwJVd",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端面试真题，会 80% 直接进大厂"),v("OutboundLink")],1)]),t._v(" "),v("li",[v("a",{attrs:{href:"https://github.com/xuya227939/blog/issues/134",target:"_blank",rel:"noopener noreferrer"}},[t._v("专科如何进入互联网大厂 "),v("OutboundLink")],1)])])])}),[],!1,null,null,null);v.default=a.exports}}]);